name: Terraform Deploy cluster

#If any commit message in your push or the HEAD commit of your PR contains
#the strings [skip ci], [ci skip], [no ci], [skip actions], or [actions skip]
#workflows triggered on the push or pull_request events will be skipped.

on:
  workflow_dispatch:
  push:
    branches:
      - main
    paths: 
      - 'terra_cluster/**'
  pull_request:
    branches:
      - main
    paths: 
      - 'terra_cluster/**'
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true
permissions:
  contents: read
  issues: write

jobs:
  check-code:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: ./terra_cluster
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: ${{ secrets.TERRAFORM_VERSION }}

      - name: Detect changed files
        id: changes
        uses: dorny/paths-filter@v3
        with:
          filters: |
            terra_cluster:
              - "terra_cluster/**"

      - name: Set terraform execution flag
        id: set-flag
        run: |
            if [[ "${{ steps.changes.outputs.terra_cluster }}" == "true" || "${{ contains(github.event.head_commit.message, 'destroy please') }}" == "true" ]];then
              echo "TF_RUN=true" >> $GITHUB_ENV
            else
              echo "TF_RUN=false" >> $GITHUB_ENV
            fi

      - name: Terraform Init
        id: init
        env:
          BUCKET: ${{ secrets.BUCKET }}
          ACCESS_KEY: ${{ secrets.ACCESS_KEY }}
          SECRET_KEY: ${{ secrets.SECRET_KEY }}
        run: terraform init -backend-config="bucket=$BUCKET" -backend-config="access_key=$ACCESS_KEY" -backend-config="secret_key=$SECRET_KEY"

      - name: Terraform Plan
        if: env.TF_RUN == 'true' && !contains(github.event.head_commit.message, 'destroy please')
        env:
          TF_VAR_cloud_id: ${{ secrets.TF_VAR_CLOUD_ID }}
          TF_VAR_token: ${{ secrets.TF_VAR_TOKEN }}
          TF_VAR_folder_id: ${{ secrets.TF_VAR_FOLDER_ID }}
          TF_VAR_remoute_ssh_pub: ${{ secrets.SSH_PUB_INSTANCE }}
          TF_VAR_remoute_ssh_priv: ${{ secrets.REMOUTE_SSH_PRIV }}
        run: terraform plan

      - name: Terraform apply
        if: env.TF_RUN == 'true' && !contains(github.event.head_commit.message, 'skip apply')
        env:
          TF_VAR_cloud_id: ${{ secrets.TF_VAR_CLOUD_ID }}
          TF_VAR_token: ${{ secrets.TF_VAR_TOKEN }}
          TF_VAR_folder_id: ${{ secrets.TF_VAR_FOLDER_ID }}
          TF_VAR_remoute_ssh_pub: ${{ secrets.SSH_PUB_INSTANCE }}
          TF_VAR_remoute_ssh_priv: ${{ secrets.REMOUTE_SSH_PRIV }}
        run: terraform apply -auto-approve

      - name: Terraform Destroy
        if: contains(github.event.head_commit.message, 'destroy please')
        env:
          TF_VAR_cloud_id: ${{ secrets.TF_VAR_CLOUD_ID }}
          TF_VAR_token: ${{ secrets.TF_VAR_TOKEN }}
          TF_VAR_folder_id: ${{ secrets.TF_VAR_FOLDER_ID }}
          TF_VAR_remoute_ssh_pub: ${{ secrets.SSH_PUB_INSTANCE }}
          TF_VAR_remoute_ssh_priv: ${{ secrets.REMOUTE_SSH_PRIV }}
        run: terraform destroy --auto-approve
